[[{"l":"Welcome","p":["Welcome to the AutoPilot documentation! This is your go-to resource for all things related to AutoPilot. Please note that our documentation is currently a work in progress. We are continuously adding new content and improving existing articles to provide you with the best information possible. Stay tuned for more updates!"]}],[{"l":"Create A Custom Boot Hook","p":["If you ever need to run custom tasks during the boot process of your instances, AutoPilot provides a flexible system for adding custom boot hook scripts. These scripts allow you to execute specific commands or tasks at boot time, ensuring that your environment is configured exactly as needed.","In this article, we will walk through the process of creating such scripts and explain how they integrate with the existing boot sequence. Along the way, we will cover best practices, troubleshooting tips, and an example of how to implement a custom boot hook script.","You have root access and you have a shell open on your jump instance as the root user."]},{"l":"Underlying Mechanism","p":["Our platform executes a series of scripts on boot. These scripts mostly reside in /opt/jrc/hooks/boot.d/ and are executed in numerical order based on their filenames. Before executing these scripts, the system checks for additional scripts in /mnt/jrc-comms/hooks/boot.d/ and injects them into the execution order. If you create a script with the same filename as an existing script in /opt/jrc/hooks/boot.d/, it will override the original script. This allows you to extend or modify the boot process without altering the original scripts, ensuring your custom logic runs seamlessly alongside the default behavior.","The application runs scripts in ascending order based on their numeric prefixes. Scripts added to /mnt/jrc-comms/hooks/boot.d will be injected into /opt/jrc/hooks/boot.d based on script prefix automatically. For example:","05-mount-recovery-mount runs first (found in /opt/jrc/hooks/boot.d)","10-cluster-clean runs next (found in /opt/jrc/hooks/boot.d)","99-custom-task runs last (added to /mnt/jrc-comms/hooks/boot.d)","Key guidelines:","Prefixes determine execution order (e.g., 00- to 99-)","Use two-digit numbering for clarity (e.g., 05-, 10-, 99-)","Scripts with the same prefix may execute in lexicographical order, but avoid ambiguity by using unique prefixes","Scripts added to /mnt/jrc-comms/hooks/boot.d will persist AMI upgrades, stack clones, etc.","By following this structure, you can extend the boot process with custom logic while maintaining predictable execution order. Adding scripts to persistent storage also prevents the need to reimage instances and replace them with new AMIs."]},{"l":"Example: Hello World","p":["In this example, we will simply create a custom boot hook script that will log a message to the screen. First we will need to create a new file located at /mnt/jrc-comms/hooks/boot.d/99-custom-task with the following contents:","Observe the following:","The script has the prefix 99-, which ensures it runs last in the boot sequence.","It uses set -e to exit immediately if any command fails, preventing further execution in case of errors.","It sources the helper functions from /opt/jrc/lib/helpers to utilize common utility functions like debug.","In order for the script to execute correctly, it must have the right permissions and ownership. Each script must have the ownership of root:root and be executable. This is crucial for security and functionality and if not set correctly, then we refuse to run the script during the boot process.","You can run the following commands to set the correct permissions and ownership to our example script:","You can now test that your script is running by executing it manually:","You can also test how it runs during along side the existing boot scripts by running the following command:","If all goes well, you should see your debug message printed to the console, alongside the other boot messages."]},{"l":"Example: Fstab Alternative","p":["AutoPilot's boot hook system provides a more reliable alternative to /etc/fstab for bind mounts within dynamic environments, particularly when dealing with paths that might not be available during early boot stages.","The following is an example of how you would implement a boot hook script to create bind mounts. Typically this would be accomplished within /etc/fstab.","First, we will want to create the script in /mnt/jrc-comms/hooks/boot.d/99-links with the following contents:","This script will create bind mounts on boot on all instances, alternatively you can only create these mounts on specific instances by checking the instance's roles:","After creating the script, ensure it has the correct permissions and ownership:","You can now test the script's functionality by triggering it manually or rebooting the instance."]},{"l":"Troubleshooting Tips","p":["If you want to troubleshoot the boot process, you can look at the instance's logs:","Alternatively, you can use the cluster command to view the boot logs for all the instances and even follow the logs in real-time:","Filtering based on role is also possible, for example, to view only the logs for the web role:"]}],[{"l":"Onboard Magento With Deployer","p":["This guide will walk you through onboarding your existing Magento Store onto the AutoPilot platform using Deployer. We will initially deploy a sample codebase onto a new deployment. Although we demonstrate using PHP Deployer, you can use any deployment tool you prefer. Filesystem requirements are outlined in the Filesystem Requirements section.","We assume the store's domain name is example.com."]},{"l":"Create Deployment","p":["Create a new deployment through the AutoPilot dashboard that matches your Magento version to ensure compatibility with services like PHP and MySQL. If your Magento version is unavailable, mix and match service versions to meet your requirements. If provisioning fails, open a support ticket for assistance.","After provisioning, visit the Security tab to whitelist your IPv4 address and SSH key. Find your public IP at ip.jetrails.com.","My IP Address","Your shell access command is available on the Overview tab.","We assume the shell access command is ssh jrc-3p7i-376i@10.10.10.10."]},{"l":"Deployer File","p":["We created an AutoPilot recipe for Deployer to aid the deployment process. Find it on GitHub at jetrails/deployer-autopilot. A sample deployer recipe is in the examples folder, e.g., magento2.php.","Modify the following settings in the deployer file with your values:","We assume the repository is git@github.com:example/example.git and you use deploy keys for GitHub authentication.","Find your cluster user's public SSH key by connecting to your deployment via SSH and running:"]},{"l":"Import Database","p":["Upload your database dump to your deployment using rsync:","Your database dump is named database-dump.sql.","Import the database dump into your MySQL database. Find your database name in the AutoPilot dashboard's Overview tab.","We assume the database name is vo889841yc249h86.","Run the following command:"]},{"l":"Upload Media Files","p":["Upload your media files using rsync:","Your local media folder is located at /path/to/media/.","The --no-p, --no-g, and --chmod=ugo=rwX flags ensure proper permissions on the media files."]},{"l":"Deploy Codebase","p":["Once you have your deployer file, database, and media files ready, deploy your codebase:","If you integrated our example recipe, services like php-fpm and varnish will restart automatically after a successful deployment."]},{"l":"Filesystem Requirements","p":["NGINX and PHP-FPM run under the www-data user and group, therefore, all publicly accessible files must be readable by the www-data user. Additionally, any directories or files that need to be writable must also have write permissions for the www-data user. This is easy to do with Deployer's acl strategy, which leverages setfacl to set extended permissions.","To ensure proper ownership and permissions for the codebase files, follow these guidelines:","The codebase files should be owned by jrc-3p7i-376i:jetrails.","The codebase files should have the permissions u=rwX,g=u,o=rX.","The www-data user should have rwX permissions on writable directories such as var.","If you find yourself needing to set ownership and permissions manually, then follow the outlined steps. Use the following commands to set the ownership and permissions:","To grant the www-data user the necessary write permissions, use these commands:"]}],[{"l":"Serve Web Files on Root Filesystem","p":["Web files are accessible across your cluster deployment using NFS. While this provides a convenient way to share files, it can also introduce challenges, particularly around old code bases that still use modules that follow the PSR-0 standard. On newer deployments of Magento 2, this shouldn't be an issue, but if you are working with older code bases, you may need to serve web files from the root filesystem instead of NFS.","On newer deployments of Magento 2 (template version 5.2 and later), you can convert your cluster to serve web files from the root filesystem. This will resolve any slowness that you might feel when accessing the admin interface but it does come with some caveats."]},{"l":"Conversion walkthrough","p":["You are logged in as the cluster user (uid 9001) and your site's primary domain name is example.com. This feature is also only compatible with Magento at the moment, since other applications are not structured in a way that would support this type of setup.","First, we will need to modify the nginx configuration for your site to change where the root directory is set. Luckily, this is a simple process that can be done with the vhost command.","If you made a lot of customizations to your nginx configs and deviated from the base template, then you may want to reimplement the changes modifing the nginx configs or implement the root change manually. You can review how much your configs deviate from the base template by running the following command:","Next, we will need to create a custom boot hook that will sync the web files from the NFS share to the root filesystem on boot.","Now all that is left is to execute the custom boot hook script to sync the web files from the NFS share to the root filesystem. The script also handles reloading nginx and restarting php-fpm."]},{"l":"Boot process","p":["Everything is handled in the boot hook script. The script syncs over web files for every site defined in vhost that has the use_www_cache_root option set to yes. Here are some high level steps of what happens during the boot process:","Remove existing cache in /var/www-cache(faster copy process)","Ensure that the web node can still serve web files by serving files from the NFS share.","Start the copy process from the NFS share to the root filesystem.","Start serving web files from the root filesystem."]},{"l":"Manually syncing changes","p":["If you need to sync changes that are made in your NFS share to the root filesystem, you can run the following command:","This will run the same script that is executed during the boot process and will sync the web files from the NFS share to the root filesystem while still serving files from the NFS share until the copy process is complete.","If you would like to simply copy the files over without having the NFS fallback, you can run the following command:"]},{"l":"Manually rotate web nodes","p":["If you find yourself in a situation where you need to manually rotate your web nodes one by one, then you can run the following command:","This command will run on every web node and mark the node as unhealthy, which will cause the target group to stop sending traffic to the node. It will then fail health checks and a new web node will be started to replace it. We wait till infinity because we want to wait for that node to be fully shutdown before continuing to replace the next web node."]}],[{"l":"Patches","p":["Patches are categorized as Critical, Recommended, or Optional, indicating their severity and the urgency of application. This classification is reflected in the last character of the patch's name.","Severity","Description","Critical","Must be applied to all environments as soon as possible.","Recommended","Includes important fixes and is recommended for all environments, but can be applied later.","Optional","Applied only if specifically requested and does not affect performance or functionality."]}],[{"l":"P001C","p":["Fixes data persistence issue with OpenSearch and Redis."]},{"l":"Description","p":["We first noticed the issue that OpenSearch and Redis session data was being deleted every time it was taken out of hibernation. As a result, the site had to be re-indexed upon each wake-up.","The root cause lies in the helper scripts that run on boot. These scripts manage version changes for OpenSearch and Redis and are also triggered by CloudFormation (CFN) when a version update is requested.","In some cases, we need to delete persistent data to prevent compatibility issues between old data and new software versions. However, the problem is that the current boot process clears the data without checking if a version change has actually occurred."]},{"l":"Impact","p":["All-In-One (AIO) Servers","Web Layer","Redis Session Layer","Redis Cache Layer","OpenSearch Layer"]},{"l":"Changes","p":["The following files are patched on the servers receiving the patch:","/opt/jrc/sbin/change-search-version","/opt/jrc/sbin/change-redis-session-version","/opt/jrc/sbin/change-redis-cache-version"]},{"l":"If You Accept","p":["During your chosen maintenance window, the patch will be applied to all targeted servers. New Amazon Machine Images (AMIs) will be generated for each of the servers involved, and these new AMIs will be used to replace the current servers. Downtime should be minimal and take less than 10 minutes to restore service."]},{"l":"If You Reject","p":["OpenSearch and Redis session data will continue to be deleted as a side effect every time the deployment is taken out of hibernation. This will result in the need to re-index OpenSearch upon each wake-up and loss of session data."]}],[{"l":"P002R","p":["PHP performance improvements."]},{"l":"Description","p":["The opcache.max_file_size directive determines the maximum file size that can be cached by OPcache. Setting this value to zero allows all files to be cached, which can significantly improve the Time To First Byte (TTFB) metric. Previously, this value was limited to avoid caching large files deemed unnecessary for application functionality. However, further analysis has shown that removing this limitation enhances performance without adverse effects."]},{"l":"Impact","p":["Web Layer"]},{"l":"Changes","p":["The opcache.max_file_size directive will be updated to zero."]},{"l":"If You Accept","p":["During your chosen maintenance window, the patch will be applied. PHP-FPM will be restarted on the web tier to apply the changes. No downtime is expected since we are only restarting the PHP-FPM service."]},{"l":"If You Reject","p":["The current configuration will remain unchanged, and no performance improvements will be applied."]}],[{"l":"P003O","p":["Removed SSH keys count limit."]},{"l":"Description","p":["This patch increases the maximum number of SSH keys allowed by transitioning from a single advanced SSM parameter to multiple standard SSM parameters. Each SSH key is now stored individually, removing the previous 8k size limitation."]},{"l":"Impact","p":["All-In-One (AIO) Servers","Jump Host Servers","Web Layer"]},{"l":"Changes","p":["Public keys in the advanced SSM parameter are split into multiple standard SSM parameters.","The sync-ssh-keys script is patched on jump and web leader instances.","Cloudformation template is updated to reflect the new method of storing SSH keys:"]},{"l":"If You Accept","p":["The deployment will support effectively unlimited SSH keys. During your chosen maintenance window, the patch will be applied to all targeted servers. New Amazon Machine Images (AMIs) will be generated for each of the servers involved, and these new AMIs will be used to replace the current servers. Downtime should be minimal and take less than 10 minutes to restore service."]},{"l":"If You Reject","p":["No performance or functionality degradation is expected, but the deployment will not benefit from the increased SSH key limit."]}],[{"l":"P004C","p":["Daily Backups For RDS With Standard Retention"]},{"l":"Description","p":["This patch fixes an issue regarding daily backup retention with RDS clusters. With the standard retention policy, RDS clusters currently have a daily backup retention of 1 day. This patch will increase the daily backup retention to 35 days, allowing for better data recovery options."]},{"l":"Impact","p":["RDS Database Layer"]},{"l":"Changes","p":["Simple tagging change to the RDS cluster"]},{"l":"If You Accept","p":["RDS will increase it's daily backup retention from 1 day to 35 days."]},{"l":"If You Reject","p":["RDS will continue to have a daily backup retention of 1 day."]}],[{"l":"P005O","p":["Null-Bytes Within Rotated Log Files."]},{"l":"Description","p":["This patch fixes an issue regarding null-bytes within rotated nginx log files. This issue can cause problems with log analysis, as the presence of null-bytes make common tools behave unexpectedly. This patch will prevent the underlying issue that causes null-bytes to be present within rotated log files."]},{"l":"Impact","p":["There is no expected downtime or performance impact."]},{"l":"Changes","p":["Update /etc/logrotate.d/nginx config file to remove strategy involving the copytruncate option.","Remount /mnt/jrc-logs on web tier with the lookupcache=none option to prevent stale file handles.","Allow root user to ssh between web tier and jump node"]},{"l":"If You Accept","p":["This patch will add an extra boot hook to your deployment located at /mnt/jrc-comms/hooks/boot.d/99-logrotate-P005O. This boot hook will make sure that the problem is fixed on every boot, this way we can avoid a jump/web AMI rollup proceedure."]},{"l":"If You Reject","p":["There might occationally be null-bytes present within rotated log files."]}],[{"l":"P006C","p":["Atomic Writes When Scaling Web Tier"]},{"l":"Description","p":["This patch fixes an issue regarding atomic writes when scaling the web tier. Currently, some customers are experiencing issues scaling smoothly because of a race condition that happens when writing to the same file shared over NFS. This patch will ensure that writes happen atomically, preventing any data loss that may occur during scaling operations. The data that is being written is not customer data, but instead metadata about the deployment."]},{"l":"Impact","p":["Web Tier"]},{"l":"Changes","p":["Update /opt/jrc/lib/helpers file with improved helper functions"]},{"l":"If You Accept","p":["Web tier will scale smoothly without any interruption or data loss."]},{"l":"If You Reject","p":["Web tier might experience issues when scaling."]}]]